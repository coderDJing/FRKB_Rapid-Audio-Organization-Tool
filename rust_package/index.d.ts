/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

/** 进度信息结构体 */
export interface ProcessProgress {
  processed: number
  total: number
}
/** 音频文件处理结果 */
export interface AudioFileResult {
  /** 整个文件的 SHA256，用于二进制级去重 */
  sha256Hash: string
  /** 原始文件路径 */
  filePath: string
  /** 基于 Chromaprint 的声纹标识 */
  fingerprint?: string
  /** 将声纹再做 SHA256 摘要，便于快速比对 */
  fingerprintHash?: string
  /** 文件扩展名（统一小写） */
  formatExt?: string
  /** 根据编码参数生成的可读质量标签 */
  qualityLabel?: string
  /** 平均码率（单位 bps） */
  bitrate?: number
  /** 采样率（Hz） */
  sampleRate?: number
  /** 位深（bit） */
  bitDepth?: number
  /** 声道数量 */
  channels?: number
  /** 音频时长（秒） */
  durationSeconds?: number
  /** 文件大小（字节） */
  fileSize?: number
  /** 错误描述（当声纹或质量分析失败时） */
  error?: string
}
/**
 * 计算音频文件的 SHA256 哈希值，并生成声纹与质量标签
 *
 * # 参数
 * * `file_paths` - 音频文件路径数组
 *
 * # 返回值
 * * 包含每个文件哈希值和路径的结果数组
 */
export declare function calculateAudioHashes(filePaths: Array<string>): Array<AudioFileResult>
/** 带进度回调的异步音频处理 */
export declare function calculateAudioHashesWithProgress(filePaths: Array<string>, callback?: (err: Error | null, arg: ProcessProgress) => any | undefined | null): Promise<Array<AudioFileResult>>
